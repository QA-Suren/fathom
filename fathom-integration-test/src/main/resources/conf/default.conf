##############################################################################
#
# This file defines the 'default' configuration profile of your application.
#
# You may create and use other profiles by specifying the name in your
# Fathom application launch arguments:
#
#    --profile default
#    --profile master
#
# Within a config profile, settings can be prefixed by "mode" which allows you to
# control configuration based on the PROD, TEST, & DEV runtime modes.
#
# If unspecified, your application will run in the PROD mode.
#
# If a mode-specific variant of a setting is available it will be used
# instead of a non-mode variant.
#
# For example:
#
# dev.mySetting = red
# mysetting = yellow
#
# "mySetting" will be red in DEV mode and yellow for all other modes.
#
##############################################################################

application {
  name = ${project.name}
  version = ${project.version}

  # You may optionally relocate your conf and controller packages using a custom prefix
  # e.g. application.package=com.gitblit
  package = ""

  # The prefix to use for internal cookies generated by Fathom.
  cookie.prefix = "FATHOM"

  # ISO Language Code, optionally followed by a valid ISO Country Code.
  # e.g. application.languages=en,de,es,fr,ru
  languages = [en, de, es, fr, ro, ru]
}

# Specify the fathom-security realms config file
security.configurationFile = "classpath:conf/realms.conf"

# Undertow server settings
undertow {

  # Setting a port to 0 disables that transport
  httpPort = 8080
  httpsPort = 0
  ajpPort = 0

  # Define the network interface for serving
  # e.g. 0.0.0.0 will serve on all available network interfaces
  host = "0.0.0.0"

  # The context path of your application.
  # This is useful if you are running your application behind a reverse proxy
  # and you have to create proxy/rewrite rules.
  contextPath = "/"

  # Optionally setup https/SSL
  keystoreFile = ""
  keystorePassword = ""
  truststoreFile = ""
  truststorePassword = ""
}

# Mail Server Settings
mail {
  server = "smtp.gmail.com"
  port = 465
  useTls = true
  useSsl = true
  username = "myUsername"
  password = "myPassword"
  debug = false
  systemName = "Fathom"
  systemAddress = "fathom@gitblit.com"
  bounceAddress = "fathom@gitblit.com"
}

# Metrics integration
metrics {
  # Collect JVM metrics
  jvm = true

  # Report metrics via MBeans for JConsole, VisualVM, or JMX
  mbeans = true
}

# Logback configuration file
# see http://logback.qos.ch/documentation.html
logback.configurationFile = "classpath:conf/logback-dev.xml"

# Set the preferred JCache provider.
# If unspecified, the first provider discovered will be used.
# You may specify a full provider classname or you may specify
# a nickname for an already registered JCache implementation
# such as: ehcache, infinispan, hazelcast
jcache.preferredProvider = ""

# Ehcache configuration file
# see http://ehcache.org/documentation
# specify 'jcache' to default to the Jcache default configuration
# ehcache.configurationFile = "classpath:conf/ehcache.xml"
ehcache.configurationFile = "jcache"

# Infinispan configuration file
# see http://infinispan.org/docs/7.0.x/user_guide/user_guide.html
# specify 'jcache' to default to the Jcache default configuration
# infinispan.configurationFile = "classpath:conf/infinispan.xml"
infinispan.configurationFile = "jcache"

# Hazelcast configuration file
# see http://hazelcast.org/documentation
# specify 'jcache' to default to the Jcache default configuration
# hazelcast.configurationFile = "classpath:conf/hazelcast.xml"
hazelcast.configurationFile = "jcache"

# Quartz configuration file
# see http://www.quartz-scheduler.org/documentation
quartz.configurationFile = "classpath:conf/quartz.properties"

# Production mode overrides
prod {
  metrics.mbeans.enabled = false
  logback.configurationFile = "classpath:conf/logback.xml"
}
